# scoring_engine.py

def evaluate_pdf(meta):
    score = 0
    risk_class = "Low"
    flags = []

    # === Check AcroForm/XFA presence ===
    if meta.get("acroform_present"):
        score += 15
        flags.append("AcroForm structure present")

    if meta.get("xfa_present"):
        score += 20
        flags.append("XFA layer detected")

    if meta.get("field_count", 0) > 0:
        score += min(meta["field_count"], 10)
        flags.append(f"{meta['field_count']} form fields found")

    # === Flattening detection ===
    if meta.get("flattened") is True:
        score += 10
        flags.append("Appears flattened (no interactive elements)")
    elif meta.get("flattened") is False:
        flags.append("Not flattened (interactive annotations present)")
    else:
        flags.append("Flattened status undetermined")

    # === Metadata producer flagging ===
    producer = meta.get("producer", "").lower()
    if "adobe" in producer:
        flags.append("Generated by Adobe")
    elif "abc" in producer:
        score += 15
        flags.append("Generated by ABCpdf (known suppressor)")
    elif "bfo" in producer or "itext" in producer:
        score += 10
        flags.append("Produced by potential mimicware engine")

    # === Known anomalies ===
    if "error" in meta or "fitz_error" in meta:
        score += 25
        flags.append("Failed to parse completely â€” structural issues")

    # === Final risk class ===
    if score >= 50:
        risk_class = "High"
    elif score >= 30:
        risk_class = "Medium"

    return {
        "score": score,
        "risk_class": risk_class,
        "flags": flags
    }